{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap","webpack:///./APIs/Controllers/ErrorController.js","webpack:///./APIs/Controllers/authController.js","webpack:///./APIs/Controllers/mlControllers.js","webpack:///./APIs/Controllers/studentController.js","webpack:///./APIs/Model/MlDataModel.js","webpack:///./APIs/Model/StudentModel.js","webpack:///./APIs/Routers/mlRouters.js","webpack:///./APIs/Routers/studentRouter.js","webpack:///./APIs/utils/appError.js","webpack:///./APIs/utils/catchErr.js","webpack:///./APIs/utils/email.js","webpack:///./React/Server/index.js","webpack:///./React/Shared/Components/App.js","webpack:///./React/Shared/Components/Course/Activity.js","webpack:///./React/Shared/Components/Course/Category.js","webpack:///./React/Shared/Components/Course/Content.js","webpack:///./React/Shared/Components/Course/CourseHome.js","webpack:///./React/Shared/Components/Course/Definitions.js","webpack:///./React/Shared/Components/Course/LS/LS.js","webpack:///./React/Shared/Components/Course/LS/LearningStyle.js","webpack:///./React/Shared/Components/Course/Overview.js","webpack:///./React/Shared/Components/Course/Summary.js","webpack:///./React/Shared/Components/Course/Visual.js","webpack:///./React/Shared/Components/Dashboard.js","webpack:///./React/Shared/Components/Login.js","webpack:///./React/Shared/Components/Signup.js","webpack:///./React/Shared/Components/theme.js","webpack:///./React/Shared/Data/categories.js","webpack:///./React/Shared/Data/courses.js","webpack:///./React/Shared/Data/learningStyles.js","webpack:///./React/Shared/Data/routes.js","webpack:///./app.js","webpack:///./server.js","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Avatar\"","webpack:///external \"@material-ui/core/Box\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/CardMedia\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/Container\"","webpack:///external \"@material-ui/core/CssBaseline\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Link\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/colors\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Apps\"","webpack:///external \"@material-ui/icons/ArrowForwardIosRounded\"","webpack:///external \"@material-ui/icons/CheckCircleSharp\"","webpack:///external \"@material-ui/icons/LockOutlined\"","webpack:///external \"axios\"","webpack:///external \"bcrypt\"","webpack:///external \"cors\"","webpack:///external \"crypto\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"nodemailer\"","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-router-dom\"","webpack:///external \"serialize-javascript\"","webpack:///external \"util\"","webpack:///external \"validator\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./server.js\");\n","module.exports = (err, req, res, next) => {\r\n  err.statusCode = err.statusCode || 500;\r\n  err.status = err.status || \"fail\";\r\n\r\n  res.status(err.statusCode).json({\r\n    status: err.status,\r\n    message: err.message\r\n  });\r\n};\r\n","const Student = require(\"../Model/StudentModel\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst { promisify } = require(\"util\");\r\nconst AppErr = require(\"../utils/appError\");\r\nconst catchAsync = require(\"../utils/catchErr\");\r\nconst sendEmail = require(\"../utils/email\");\r\nconst crypto = require(\"crypto\");\r\n\r\nconst singleToken = id => {\r\n  return jwt.sign({ id }, process.env.SEC_STR, {\r\n    expiresIn: process.env.TIME_DUR\r\n  });\r\n};\r\n\r\nconst createSendToken = (student, statusCode, res, str) => {\r\n  const token = singleToken(student._id);\r\n  const cookieOption = {\r\n    expires: new Date(\r\n      Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000\r\n    ),\r\n\r\n    httpOnly: true\r\n  };\r\n\r\n  if (process.env.NODE_ENV === \"production\") cookieOption.secure = true;\r\n\r\n  res.cookie(\"jwt\", token, cookieOption);\r\n\r\n  //remove the password from the output\r\n  student.password = undefined;\r\n\r\n  res.status(statusCode).json({\r\n    status: str,\r\n    token,\r\n    data: {\r\n      student\r\n    }\r\n  });\r\n};\r\n\r\nexports.signup = catchAsync(async (req, res) => {\r\n  const newStudent = await Student.create(req.body);\r\n\r\n  createSendToken(newStudent, 201, res, \"sign up success !!\");\r\n});\r\n\r\nexports.login = catchAsync(async (req, res, next) => {\r\n  const { studentId, password } = req.body;\r\n\r\n  //1) checking the user and pass is provied or not\r\n  if (!studentId || !password)\r\n    return next(new AppErr(\"Enter the Email/password\", 400));\r\n  //2) checking the pass from DB\r\n  const student = await Student.findOne({ studentId }).select(\"+password\");\r\n\r\n  if (!student || !(await student.checkPassword(password, student.password))) {\r\n    return next(new AppErr(\"Incorrect the Email/password\", 400));\r\n  }\r\n\r\n  //3)Issue the Token\r\n  createSendToken(student, 201, res, \"Login success !!\");\r\n});\r\n\r\nexports.protect = catchAsync(async (req, res, next) => {\r\n  let token;\r\n\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith(\"Bearer\")\r\n  ) {\r\n    //console.log(req.headers.authorization, \"protect\");\r\n    token = req.headers.authorization.split(\" \")[1];\r\n  }\r\n\r\n  //1) check the token\r\n  if (!token) {\r\n    return next(new AppErr(\"You must login first ..\", 403));\r\n  }\r\n\r\n  //2)verification token\r\n  const decoded = await promisify(jwt.verify)(token, process.env.SEC_STR);\r\n\r\n  //3)check if the user still exist\r\n  const curStudent = await Student.findById(decoded.id);\r\n\r\n  if (!curStudent) {\r\n    return next(new AppErr(\"Student have been deleted\", 404));\r\n  }\r\n\r\n  //4)Check if the user change password after the token was issused\r\n  if (curStudent.changePasswordAfter(decoded.iat)) {\r\n    return next(new AppErr(\"Student recently changed  the password \", 400));\r\n  }\r\n\r\n  //grant access\r\n  req.student = curStudent;\r\n  console.log(req.student);\r\n  next();\r\n});\r\n\r\nexports.passwordForget = catchAsync(async (req, res, next) => {\r\n  //1)Get student based on student ID\r\n  const student = await Student.findOne({ studentId: req.body.studentId });\r\n\r\n  if (!student)\r\n    return next(new AppErr(\"No such student found by this ID\", 404));\r\n\r\n  const resetToken = student.generateResetToken();\r\n  console.log(resetToken); //Logs the restToken\r\n  //2) saveing the reset Token to DB\r\n  await student.save({ validateBeforeSave: false });\r\n\r\n  const reset = `${req.protocol}://${req.get(\r\n    \"host\"\r\n  )}/api/v1/student/resetPassword/${resetToken}`;\r\n\r\n  const message = `Forget Your password ? just click the following link  to  change it ${reset}.\\nif you remember ignore it`;\r\n\r\n  //3)Mail Sending function\r\n  try {\r\n    await sendEmail({\r\n      studentId: student.studentId,\r\n      subject: \"your password reset link vaild for 10 min\",\r\n      message\r\n    });\r\n\r\n    res.status(200).json({\r\n      status: \"success\",\r\n      message: \"token sent to email\"\r\n    });\r\n  } catch (err) {\r\n    student.passwordResetToken = undefined;\r\n    student.passwordResetExpires = undefined;\r\n\r\n    await student.save({ validateBeforeSave: false });\r\n\r\n    return next(new AppErr(\"there was a error in mail\", 500));\r\n  }\r\n});\r\n\r\nexports.resetPassword = catchAsync(async (req, res, next) => {\r\n  //1) encrypting the token\r\n  const hashedToken = crypto\r\n    .createHash(\"sha256\")\r\n    .update(req.params.token)\r\n    .digest(\"hex\");\r\n\r\n  //2)finding the user relavent to the token\r\n  const student = await Student.findOne({\r\n    passwordResetToken: hashedToken,\r\n    passwordResetExpires: { $gt: Date.now() }\r\n  });\r\n  //3) if token expired or user not found.\r\n  if (!student) {\r\n    return next(new AppErr(\"Token is invalid or expired\", 400));\r\n  }\r\n\r\n  //4)update change at property for the user\r\n  console.log(req.body.password, req.body.passwordConfirm);\r\n  student.password = req.body.password;\r\n  student.passwordConfirm = req.body.passwordConfirm;\r\n  student.passwordResetExpires = undefined;\r\n  student.passwordResetToken = undefined;\r\n  student.passwordChangeAt = Date.now() - 1000;\r\n  await student.save();\r\n\r\n  //5) log the student in ..\r\n  createSendToken(student, 200, res, \"Login success !!\");\r\n});\r\n\r\nexports.updatePassword = catchAsync(async (req, res, next) => {\r\n  //1) Get the user from the collection\r\n\r\n  const student = await Student.findById(req.student._id).select(\"+password\");\r\n\r\n  console.log(req.body.password, student.password);\r\n  //2)Check if posted current password is correct\r\n  if (\r\n    !(await student.checkPassword(req.body.passwordCurrent, student.password))\r\n  ) {\r\n    return next(new AppErr(\"Your Current password is wrong\", 401));\r\n  }\r\n\r\n  //3)if so, update password\r\n  student.password = req.body.password;\r\n  student.passwordConfrim = req.body.passwordConfrim;\r\n  console.log(\"sas\");\r\n  await student.save();\r\n\r\n  createSendToken(student, 200, res, \"Password updated !!\");\r\n});\r\n","\r\nconst ML = require(\"../Model/MlDataModel\");\r\nconst catchAsync = require(\"../utils/catchErr\");\r\n\r\nexports.post = catchAsync(async (req, res) => {\r\n  console.log(req.body);\r\n  const NewMldata = await ML.create(req.body);\r\n\r\n  res.status(200).json({\r\n    message: \"Ml Data posted !\",\r\n    data: {\r\n      NewMldata\r\n    }\r\n  });\r\n});\r\n","const Student = require(\"../Model/StudentModel\");\r\n\r\nexports.getAll = async (req, res) => {\r\n  const allStudents = await Student.find();\r\n\r\n  res.status(200).json({\r\n    message: \"Success!\",\r\n    data: { allStudents }\r\n  });\r\n};\r\n","const mongoose = require(\"mongoose\");\r\n\r\nconst MLSchema = new mongoose.Schema({\r\n  ABC: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  D: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  C: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  AAC: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  A: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  V: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  ABC_T: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  D_T: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  C_T: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  AAC_T: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  },\r\n  A_T: {\r\n    type: Number,\r\n    min: 0,\r\n    max: 9\r\n  }\r\n});\r\n\r\nconst Mldata = mongoose.model(\"Ml\", MLSchema);\r\n\r\nmodule.exports = Mldata;\r\n","const mongoose = require(\"mongoose\");\r\nconst validator = require(\"validator\");\r\nconst bcrypt = require('bcrypt');\r\nconst crypto = require(\"crypto\");\r\n\r\nconst studentSchema = mongoose.Schema({\r\n  name: {\r\n    type: String\r\n  },\r\n  class: {\r\n    type: Number,\r\n    min: 5,\r\n    max: 9\r\n  },\r\n  studentId: {\r\n    type: String,\r\n    validate: [validator.isEmail, \"Enter valid ID\"],\r\n    lowercase: true,\r\n    unique: true,\r\n    required: [true, \"say your student ID\"]\r\n  },\r\n  photo: String,\r\n  password: {\r\n    type: String,\r\n    minlength: 6,\r\n    required: [true, \"password\"],\r\n    select: false\r\n  },\r\n  passwordConfrim: {\r\n    type: String,\r\n    required: [true, \"Enter Confrim Password \"],\r\n    validate: {\r\n      validator: function(el) {\r\n        return el === this.password;\r\n      },\r\n      message: \"password not match !\"\r\n    }\r\n  },\r\n  passwordChangeAt: Date,\r\n  passwordResetToken: String,\r\n  passwordResetExpires: Date,\r\n  active: {\r\n    type: Boolean,\r\n    default: true,\r\n    select: false\r\n  }\r\n});\r\n\r\nstudentSchema.pre(\"save\", async function(next) {\r\n  if (!this.isModified(\"password\")) return next();\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n  this.passwordConfirm = undefined;\r\n  next();\r\n});\r\n\r\n//method to check the password from the datebase\r\nstudentSchema.methods.checkPassword = async function(\r\n  Enteredpassword,\r\n  DBpassword\r\n) {\r\n  return await bcrypt.compare(Enteredpassword, DBpassword);\r\n};\r\n\r\n//method for protect middleware\r\nstudentSchema.methods.changePasswordAfter = function(JWTtimestamp) {\r\n  if (this.passwordChangeAt) {\r\n    const changedTimeStamp = parseInt(\r\n      this.passwordChangeAt.getTime() / 1000,\r\n      10\r\n    );\r\n    return changedTimeStamp > JWTtimestamp;\r\n  }\r\n};\r\n\r\nstudentSchema.methods.generateResetToken = function() {\r\n  //1)generate Random String\r\n  const resetToken = crypto.randomBytes(32).toString(\"hex\");\r\n  //2)Encrypting the random String and saveing to DB\r\n  this.passwordResetToken = crypto\r\n    .createHash(\"sha256\")\r\n    .update(resetToken)\r\n    .digest(\"hex\");\r\n  //3)Setting password resetToken expire time\r\n  this.passwordResetExpires = Date.now() + 600000; // 10 Mins\r\n  //4)Sending non encrpted token  to user\r\n  return resetToken;\r\n};\r\n\r\nconst Student = mongoose.model(\"Student\", studentSchema);\r\n\r\nmodule.exports = Student;\r\n","\r\nconst express = require(\"express\");\r\nconst router = express.Router();\r\nconst mlController = require(\"../Controllers/mlControllers\");\r\n\r\nrouter.route(\"/post\").post(mlController.post);\r\n\r\nmodule.exports = router;\r\n","const express = require(\"express\");\r\nconst router = express.Router();\r\nconst authController = require(\"../Controllers/authController\");\r\nconst studentController = require(\"../Controllers/studentController\");\r\n\r\nrouter.route(\"/signup\").post(authController.signup);\r\nrouter.route(\"/login\").post(authController.login);\r\nrouter.route(\"/forgetPassword\").post(authController.passwordForget);\r\nrouter.route(\"/resetPassword/:token\").post(authController.resetPassword);\r\nrouter\r\n  .route(\"/updatePassword\")\r\n  .post(authController.protect, authController.updatePassword);\r\nrouter.route(\"/getAll\").get(authController.protect, studentController.getAll);\r\n\r\nmodule.exports = router;\r\n","class AppError extends Error {\r\n  constructor(message, statusCode) {\r\n    super(message);\r\n\r\n    this.statusCode = statusCode;\r\n    this.status = `${statusCode}`.startsWith(\"4\") ? \"fail\" : \"error\";\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\nmodule.exports = AppError;\r\n","module.exports = fn => {\r\n  return (req, res, next) => {\r\n    fn(req, res, next).catch(next);\r\n  };\r\n};\r\n","const nodemailer = require(\"nodemailer\");\r\n\r\nconst sendEmail = async option => {\r\n  console.log(option);\r\n  //1) create a transfer\r\n  const transporter = nodemailer.createTransport({\r\n    host: process.env.MAIL_HOST,\r\n    port: process.env.MAIL_PORT,\r\n    auth: {\r\n      user: process.env.MAIL_USER,\r\n      pass: process.env.MAIL_PASS\r\n    }\r\n    //Active in gmail\r\n  });\r\n\r\n  //2) Define the email option\r\n  const mailOption = {\r\n    from: \"Siva prakash  <admin@chillstudies.com>\",\r\n    to: option.studentId,\r\n    subject: option.subject,\r\n    text: option.message\r\n  };\r\n\r\n  //3)Actually send the email\r\n\r\n  await transporter.sendMail(mailOption);\r\n};\r\n\r\nmodule.exports = sendEmail;\r\n","import express from 'express'\r\nimport { ServerStyleSheets, ThemeProvider } from '@material-ui/core/styles'\r\nimport React from 'react'\r\nimport {renderToString } from 'react-dom/server'\r\nimport App from '../Shared/Components/App'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from '../Shared/Components/theme'\r\nimport { StaticRouter, matchPath } from 'react-router-dom';\r\nimport serialize from \"serialize-javascript\";\r\nimport routes from '../Shared/Data/routes'\r\n\r\nconst router =express.Router()\r\n\r\nrouter.use(express.static('dist'))\r\n\r\nrouter.route('*').get((req, res, next) => {\r\n\r\n    const sheets = new ServerStyleSheets()\r\n\r\n    const activeRoute = routes.find(route => matchPath(req.url, route));\r\n  \r\n    const context = { ...activeRoute };\r\n  \r\n    const markup = renderToString(  \r\n      sheets.collect(\r\n          <StaticRouter context={ context } location={ req.url }>\r\n            <ThemeProvider theme={theme}>\r\n              <CssBaseline />\r\n                <App/>\r\n            </ThemeProvider>\r\n          </StaticRouter> \r\n      )\r\n    )\r\n  \r\n    const css  = sheets.toString()\r\n  \r\n    res.writeHead( 200, { 'Content-Type': 'text/html' } );\r\n    res.end(\r\n      `<!DOCTYPE html>\r\n      <html lang='en'>\r\n        <head>\r\n          <title>ChillStudies</title>\r\n          <style id='jss-server-side'>${css}</style>\r\n          <meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />\r\n          <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap' />\r\n          <script>window.__initialData__ = ${serialize(JSON.stringify(activeRoute))}</script>\r\n        </head>\r\n        <body>\r\n          <div id='root'>${markup}</div>\r\n          <script src=\"/client.js\" async></script>\r\n        </body>\r\n      </html>\r\n    `).catch(next)\r\n  })\r\n\r\nexport default router","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport routes from '../Data/routes'\r\n\r\nclass App extends React.Component {\r\n    render () {\r\n        return(\r\n            <div>\r\n                <Switch>\r\n                    {routes.map((route, i) => <Route key={i+1} {...route} />)}\r\n                </Switch>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, {useState, useEffect} from 'react'\r\nimport courses from '../../Data/courses'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    TextField,\r\n    Button,\r\n    AppBar, \r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar,withStyles, Container } from '@material-ui/core'\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    handleButton :{\r\n      margin: theme.spacing(4),\r\n      float:'right'\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n\r\n  const handleSubmit = (e,props,startTime) => {\r\n    e.preventDefault()\r\n    const q1 = (document.getElementById('q1').value).toLowerCase(),\r\n    q2 = document.getElementById('q2').value.toLowerCase(),\r\n    q3 = document.getElementById('q3').value.toLowerCase(),\r\n    q4 = document.getElementById('q4').value.toLowerCase(),\r\n    q5 = document.getElementById('q5').value.toLowerCase()\r\n \r\n    let score = 0\r\n \r\n    if(q1.includes('java virtual machine')) score++\r\n    if(q2.includes('import')) score++\r\n    if(q3.includes('3')) score++\r\n    if(q4.includes('java runtime environment')) score++\r\n    if(q5.includes('java development kit')) score++\r\n \r\n   score*=2\r\n   let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n   time = time >= 9 ? 9 : time\r\n   console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n   props.history.push('/course/'+ props.match.params.course +'/content')\r\n \r\n  }\r\n\r\nexport default function Activity (props) {\r\n    const classes = useStyles()\r\n\r\n    const startTime = Date.now()\r\n\r\n    return(\r\n\r\n        <form  autoComplete=\"off\" noValidate>\r\n            <List >\r\n                <ListItem>\r\n                <ListItemIcon>\r\n                    <ArrowForwardIosRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItem >\r\n                    <Typography variant='subtitle1'>\r\n                    Lets see if you can find the abbreviation for JVM\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>  <TextField id=\"q1\" label=\"Answer\"/> </ListItem>\r\n                </ListItem> \r\n                <ListItem>\r\n                <ListItemIcon>\r\n                    <ArrowForwardIosRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItem >\r\n                    <Typography variant='subtitle1'>\r\n                    Can you find the keyword used to include java packages ?\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem><TextField id=\"q2\" label=\"Answer\"/></ListItem>\r\n                </ListItem>\r\n                <ListItem>\r\n                <ListItemIcon>\r\n                    <ArrowForwardIosRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItem >\r\n                    <Typography variant='subtitle1'>\r\n                    what could be the value of 'a++' if 'a=2' ? \r\n                    </Typography> \r\n                </ListItem>\r\n                <ListItem><TextField id=\"q3\" label=\"Answer\"/></ListItem>\r\n                </ListItem>\r\n                <ListItem>\r\n                <ListItemIcon>\r\n                    <ArrowForwardIosRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItem >\r\n                    <Typography variant='subtitle1'>\r\n                    Lets see if you can find the abbreviation for JRE\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem><TextField id=\"q4\" label=\"Answer\"/></ListItem>\r\n                </ListItem>\r\n                <ListItem>\r\n                <ListItemIcon>\r\n                    <ArrowForwardIosRoundedIcon />\r\n                </ListItemIcon>\r\n                <ListItem >\r\n                    <Typography variant='subtitle1'>\r\n                    Lets see if you can find the abbreviation for JDK\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem><TextField id=\"q5\" label=\"Answer\"/></ListItem>\r\n                </ListItem>\r\n                <Divider variant=\"middle\" />\r\n            </List>\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.handleButton} onClick={(e)=>{ handleSubmit(e,props,startTime) }}>\r\n            Next\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport courses from '../../Data/courses'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    TextField,\r\n    Button,\r\n    AppBar, \r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar,\r\n    withStyles,\r\n    IconButton,\r\n    Container } from '@material-ui/core'\r\n\r\nimport categories from '../../Data/categories'\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    handleButton :{\r\n      margin: theme.spacing(4),\r\n      float:'right'\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n\r\nexport default function Category (props) {\r\n    const classes = useStyles()\r\n\r\n    const course =  courses.find((course) => props.match.params.course === course.name),\r\n        category = categories.find((category) => (props.match.params.category) === category.name) \r\n\r\n    return(\r\n        <div>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" className={ classes.title }  color=\"inherit\" noWrap>\r\n                    {course.name+' '+category.name}\r\n                  </Typography>\r\n                  <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\" onClick={ (e) => {\r\n                    e.preventDefault()\r\n                    props.history.push(  '/course/'+course.name)\r\n                    } }>\r\n                    <Typography gutterBottom variant=\"body1\" >\r\n                      Course Home \r\n                    </Typography>\r\n                  </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Card className={classes.card}>\r\n              <Container maxWidth=\"md\">\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                        {category.name}\r\n                    </Typography>\r\n                      { <category.component  {...props}/>}\r\n                    <br/>\r\n                </CardContent>\r\n              </Container>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport courses from '../../Data/courses'\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    makeStyles,\r\n    TextField,\r\n    Button,\r\n    AppBar,\r\n    CardContent,\r\n    CardMedia,\r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar, withStyles, Container\r\n} from '@material-ui/core'\r\nimport ArrowForwardIosRoundedIcon from '@material-ui/icons/ArrowForwardIosRounded';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    handleButton :{\r\n        margin: theme.spacing(4),\r\n        float:'right'\r\n      },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\n\r\nconst handleSubmit = (e, props, startTime) => {\r\n    e.preventDefault()\r\n    let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n    let score = time\r\n    time = time >= 9 ? 9 : time\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n    props.history.push('/course/' + props.match.params.course + '/visual')\r\n}\r\n\r\nexport default function Content(props) {\r\n    const classes = useStyles()\r\n\r\n    const startTime = Date.now()\r\n\r\n    const course = courses.find((course) => props.match.params.course === course.name),\r\n        category = props.match.params.category\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate>\r\n            <List >\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        Java\r\n                </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        This article is about a programming language. For the software platform, see Java (software platform).\r\n                        For the software package downloaded from java.com, see Java Platform, Standard Edition. For other uses, see Java (disambiguation).\r\n                        Not to be confused with JavaScript.\r\n                </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java is a general - purpose programming language that is class - based, object - oriented, and designed to have as few implementation dependencies as possible.It is intended to\r\n                        let application developers write once, run anywhere(WORA), [15] meaning that compiled Java code can run on all platforms that support Java without the need\r\n                        for recompilation. [16] Java applications are typically compiled to bytecode that can run on any Java virtual machine(JVM) regardless of the underlying computer architecture.The syntax of Java is similar to C and C++, but it has fewer low - level facilities than either of them.As of 2019, Java was one of the most popular programming languages in use according to GitHub, [17][18] particularly\r\n                        for client - server web applications, with a reported 9 million developers. [19]\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java was originally developed by James Gosling at Sun Microsystems(which has since been acquired by Oracle) and released in 1995 as a core component of Sun Microsystems ' Java platform. The original and reference implementation Java compilers, virtual machines, and class libraries were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the Java Community Process, Sun had relicensed most of its Java technologies under the GNU General Public License. Meanwhile, others have developed alternative implementations of these Sun technologies, such as the GNU Compiler for Java (bytecode compiler), GNU Classpath (standard libraries), and IcedTea-Web (browser plugin for applets).\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        The latest versions are Java 13, released in September 2019, and Java 11, a currently supported long-term support (LTS) version, released on September 25, 2018; Oracle released for the legacy Java 8 LTS the last free public update in January 2019 for commercial use, while it will otherwise still support Java 8 with public updates for personal use up to at least December 2020. Oracle (and others) highly recommend uninstalling older versions of Java because of serious risks due to unresolved security issues.[20] Since Java 9 (and 10 and 12) is no longer supported, Oracle advises its users to immediately transition to the latest version (currently Java 13) or an LTS release.\r\n                    </Typography>\r\n                </ListItem>\r\n                <Divider variant=\"middle\" />\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        History\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        James Gosling, Mike Sheridan, and Patrick Naughton initiated the Java language project in June 1991.[21] Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.[22] The language was initially called Oak after an oak tree that stood outside Gosling's office. Later the project went by the name Green and was finally renamed Java, from Java coffee, the coffee from Indonesia.[23] Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.[24]\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Sun Microsystems released the first public implementation as Java 1.0 in 1996.[25] It promised Write Once, Run Anywhere (WORA) functionality, providing no-cost run-times on popular platforms. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major web browsers soon incorporated the ability to run Java applets within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written in Java by Arthur van Hoff to comply strictly with the Java 1.0 language specification.[26] With the advent of Java 2 (released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms. J2EE included technologies and APIs for enterprise applications typically run in server environments, while J2ME featured APIs optimized for mobile applications. The desktop version was renamed J2SE. In 2006, for marketing purposes, Sun renamed new J2 versions as Java EE, Java ME, and Java SE, respectively.\r\n                    </Typography>\r\n                </ListItem>\r\n                <Divider variant=\"middle\" />\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        Principles\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        1.It must be robust and secure.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        2.It must be architecture-neutral and portable.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        3.It must execute with high performance.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        4.It must be interpreted, threaded, and dynamic.\r\n                    </Typography>\r\n                </ListItem>\r\n                <Divider variant=\"middle\" />\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        Versions\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *JDK 1.0 (January 23, 1996)[37]\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *JDK 1.1 (February 19, 1996)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *J2SE 1.2 (December 8, 1998)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *J2SE 1.3 (May 8, 2000)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *J2SE 1.4 (February 6, 2002)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *J2SE 5.0 (September 30, 2004)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 6 (December 11, 2006)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 7 (July 28, 2011)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 8 (March 18, 2014)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 9 (September 21, 2017)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 10 (March 20, 2018)\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 11 (September 25, 2018)[38]\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        *Java SE 12 (March 19, 2019)\r\n                    </Typography>\r\n                </ListItem>\r\n                \r\n                <Divider variant=\"middle\" />\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        Editions\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java Card for smart-cards.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java Platform, Micro Edition (Java ME) – targeting environments with limited resources.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java Platform, Standard Edition (Java SE) – targeting workstation environments.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java Platform, Enterprise Edition (Java EE) – targeting large distributed enterprise or Internet environments.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='h2'>\r\n                        Execution system\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='h6'>\r\n                        Java JVM and Bytecode\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                    One design goal of Java is portability, which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate run time support. This is achieved by compiling the Java language code to an intermediate representation called Java bytecode, instead of directly to architecture-specific machine code. Java bytecode instructions are analogous to machine code, but they are intended to be executed by a virtual machine (VM) written specifically for the host hardware. End users commonly use a Java Runtime Environment (JRE) installed on their machine for standalone Java applications, or in a web browser for Java applets.\r\n\r\nStandard libraries provide a generic way to access host-specific features such as graphics, threading, and networking.\r\n\r\nThe use of universal bytecode makes porting simple. However, the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native executables. Just-in-time (JIT) compilers that compile byte-codes to machine code during runtime were introduced from an early stage. Java itself is platform-independent and is adapted to the particular platform it is to run on by a Java virtual machine for it, which translates the Java bytecode into the platform's machine language\r\n                    </Typography>\r\n                </ListItem>\r\n                 <ListItem>\r\n                    <Typography variant='h6'>\r\n                        Performance\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                    Programs written in Java have a reputation for being slower and requiring more memory than those written in C++.[44][45] However, Java programs' execution speed improved significantly with the introduction of just-in-time compilation in 1997/1998 for Java 1.1,[46] the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine, such as HotSpot becoming the default for Sun's JVM in 2000. With Java 1.5, the performance was improved with the addition of the java.util.concurrent package, including lock free implementations of the ConcurrentMaps and other multi-core collections, and it was improved further with Java 1.6.\r\n                    </Typography>\r\n                </ListItem>\r\n                 <ListItem>\r\n                    <Typography variant='h6'>\r\n                        Non-JVM\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Some platforms offer direct hardware support for Java; there are micro controllers that can run Java bytecode in hardware instead of a software Java virtual machine,[47] and some ARM-based processors could have hardware support for executing Java bytecode through their Jazelle option, though support has mostly been dropped in current implementations of ARM.\r\n                    </Typography>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <Typography variant='h6'>\r\n                        Automatic memory management\r\n                    </Typography>\r\n                </ListItem>\r\n                 <ListItem>\r\n                    <Typography variant='body1'>\r\n                        Java uses an automatic garbage collector to manage memory in the object lifecycle. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the unreachable memory becomes eligible to be freed automatically by the garbage collector. Something similar to a memory leak may still occur if a programmer's code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a non-existent object are called, a null pointer exception is thrown.[48][49]\r\n\r\n                        One of the ideas behind Java's automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the stack or explicitly allocated and deallocated from the heap. In the latter case, the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a memory leak occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable or crash. This can be partially remedied by the use of smart pointers, but these add overhead and complexity. Note that garbage collection does not prevent logical memory leaks, i.e. those where the memory is still referenced but never used.\r\n\r\n                        Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.\r\n\r\n                        Java does not support C/C++ style pointer arithmetic, where object addresses can be arithmetically manipulated (e.g. by adding or subtracting an offset). This allows the garbage collector to relocate referenced objects and ensures type safety and security.\r\n\r\n                        As in C++ and some other object-oriented languages, variables of Java's primitive data types are either stored directly in fields (for objects) or on the stack (for methods) rather than on the heap, as is commonly true for non-primitive data types (but see escape analysis). This was a conscious decision by Java's designers for performance reasons.\r\n\r\n                        Java contains multiple types of garbage collectors. By default, HotSpot uses the parallel scavenge garbage collector.[50] However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the Concurrent Mark-Sweep (CMS) garbage collector is sufficient.[51] Oracle aims to replace CMS with the Garbage-First Collector (G1).[52]\r\n\r\n                        Having solved the memory management problem does not relieve the programmer of the burden of handling properly other kind of resources, like network or database connections, file handles, etc., especially in the presence of exceptions. Paradoxically, the presence of a garbage collector has faded the necessity of having an explicit destructor method in the classes, thus rendering the management of these other resources more difficult.[citation needed]\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.handleButton} onClick={(e) => { handleSubmit(e, props, startTime) }}>\r\n                Next\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, IconButton } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link as Linkto } from 'react-router-dom'\r\nimport courses from '../../Data/courses'\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        <Linkto to='/' className={classes.link}>\r\n            Chill Studies\r\n        </Linkto>\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  link : {\r\n    textDecoration : 'none',\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  HomeButton : {\r\n    float : 'right'\r\n  },\r\n  handleButton :{\r\n    margin: theme.spacing(4),\r\n    float:'left'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [ 'overview','definitons', 'activity', 'content','visual','summary'];\r\n\r\nexport default function ClassHome(props) {\r\n  const classes = useStyles();\r\n\r\n  const course =  courses.find((course) => props.match.params.course === course.name) \r\n  \r\n\r\n  return (\r\n    course ?  \r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              {course.name}\r\n            </Typography>\r\n            <IconButton edge=\"start\" className={classes.HomeButton} color=\"inherit\" aria-label=\"home\" onClick={ (e) => {\r\n              e.preventDefault()\r\n              props.history.push( '/dashboard')\r\n              } }>\r\n                <Typography gutterBottom variant=\"body1\" >\r\n                  Dashboard\r\n                </Typography>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main>\r\n          {/* Hero unit */}\r\n          <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Welcome to {course.name}!\r\n              </Typography>\r\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Happy Learning\r\n              </Typography>\r\n          </Container>\r\n          </div>\r\n          <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n            <Grid container spacing={2}>\r\n                {cards.map((card,i) => (\r\n                    <Grid item key={card} xs={12} sm={6} md={4}> \r\n                        <Linkto className={classes.link} to={`/course/${course.name}/${card}`}>\r\n                            <Card className={classes.card}>\r\n                            <CardMedia\r\n                                className={classes.cardMedia}\r\n                                image= {course.image}\r\n                                title={`${course.name} ${card}`}\r\n                            />\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                  {`${card}`}\r\n                                </Typography>\r\n                                <Typography>\r\n                                  This is a begginer level {course.name} course you can start with ease.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            </Card>\r\n                        </Linkto>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n        {/* Footer */}\r\n        <footer className={classes.footer}>\r\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          “Study hard what interests you the most in the most undisciplined, irreverent and original manner possible.”\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Richard P. Feynman\r\n          </Typography>\r\n          <Copyright />\r\n        </footer>\r\n        {/* End footer */}\r\n      </React.Fragment> \r\n      :\r\n      <div>\r\n        <h1>404 ERROR</h1>\r\n      </div>\r\n  );\r\n}","import React, {useState, useEffect} from 'react'\r\nimport courses from '../../Data/courses'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    TextField,\r\n    Button,\r\n    AppBar, \r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar,\r\n    withStyles, \r\n    Container,\r\n    Popper } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    handleButton :{\r\n        margin: theme.spacing(4),\r\n        float:'right'\r\n      },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    \r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n    Text : {\r\n        display : 'block'\r\n    }\r\n  }));\r\n\r\n\r\nconst handleSubmit = (e,props,startTime,score) => {\r\n    e.preventDefault()\r\n    score*= 2\r\n    let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n    time = time >= 9 ? 9 : time\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n\r\n    props.history.push(  '/course/'+ props.match.params.course +'/activity')\r\n}\r\n\r\nexport default function Definitions (props) {\r\n    const classes = useStyles()\r\n\r\n\r\n    const startTime = Date.now()\r\n\r\n    const [java,setJava] = useState(false)\r\n\r\n    const handleJava = () => {\r\n        setJava(true)\r\n    }\r\n\r\n    const [jvm,setJvm] = useState(false)\r\n\r\n    const handleJvm = () => {\r\n        setJvm(true)\r\n    }\r\n\r\n    const [jdk,setJdk] = useState(false)\r\n\r\n    const handleJdk = () => {\r\n        setJdk(true)\r\n    }\r\n\r\n    const [jre,setJre] = useState(false)\r\n\r\n    const handleJre = () => {\r\n        setJre(true)\r\n    }\r\n\r\n    const [jar,setJar] = useState(false)\r\n\r\n    const handleJar = () => {\r\n        setJar(true)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Container maxWidth='sm'>\r\n            <form  autoComplete=\"off\" noValidate>\r\n                <List >\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJava } >\r\n                            <Typography variant='h5' gutterBottom >\r\n                                Java\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { java ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1' gutterBottom>\r\n                                        Java is a high-level programming language developed by Sun Microsystems.\r\n                                        It was originally designed for developing programs for set-top boxes and handheld devices,\r\n                                        but later became a popular choice for creating web applications.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1' gutterBottom>\r\n                                        The Java syntax is similar to C++, but is strictly an object-oriented programming language. \r\n                                        For example, most Java programs contain classes, which are used to define objects, and methods, \r\n                                        which are assigned to individual classes. Java is also known for being more strict than C++, \r\n                                        meaning variables and functions must be explicitly defined. This means Java source code may produce \r\n                                        errors or \"exceptions\" more easily than other languages, but it also limits other types of errors \r\n                                        that may be caused by undefined variables or unassigned types.\r\n                                    </Typography>\r\n                                </ListItem> \r\n                            </React.Fragment>)\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJvm }> \r\n                            <Typography variant='h5'>\r\n                                JVM \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { jvm ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        JVM(Java Virtual Machine) acts as a run-time engine to run Java applications. \r\n                                        JVM is the one that actually calls the main method present in a java code. \r\n                                        JVM is a part of JRE(Java Runtime Environment).\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java applications are called WORA (Write Once Run Anywhere). \r\n                                        This means a programmer can develop Java code on one system and can expect it to run on any other Java enabled system without any adjustment. \r\n                                        This is all possible because of JVM.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        When we compile a .java file, .class files(contains byte-code) with the same class names present in .java file are generated by the Java compiler. \r\n                                        This .class file goes into various steps when we run it. These steps together describe the whole JVM.    \r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJre }>\r\n                            <Typography variant='h5'>\r\n                                JRE \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { jre ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        JRE stands for “Java Runtime Environment” and may also be written as “Java RTE.” \r\n                                        The Java Runtime Environment provides the minimum requirements for executing a Java application; \r\n                                        it consists of the Java Virtual Machine (JVM), core classes, and supporting files.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java Runtime Environment (to say JRE) is an installation package which provides environment to only run(not develop) \r\n                                        the java program(or application)onto your machine. JRE is only used by them who only wants to run the Java Programs \r\n                                        i.e. end users of your system.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJdk }>\r\n                            <Typography variant='h5'>\r\n                                JDK \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { jdk ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        The Java Development Kit (JDK) is a software development environment used for developing Java applications and applets. \r\n                                        It includes the Java Runtime Environment (JRE), an interpreter/loader (Java), a compiler (javac), an archiver (jar), \r\n                                        a documentation generator (Javadoc) and other tools needed in Java development.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java Development Kit (in short JDK) is Kit which provides the environment to develop and execute(run) the Java program. JDK is a kit(or package) which includes two things\r\n                                        Development Tools(to provide an environment to develop your java programs)\r\n                                        JRE (to execute your java program). became a popular choice for creating web applications.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJar }>\r\n                            <Typography variant='h5'>\r\n                                JAR \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { jar ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java is a high-level programming language developed by Sun Microsystems.\r\n                                        It was originally designed for developing programs for set-top boxes and handheld devices,\r\n                                        but later became a popular choice for creating web applications.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java is a high-level programming language developed by Sun Microsystems.\r\n                                        It was originally designed for developing programs for set-top boxes and handheld devices,\r\n                                        but later became a popular choice for creating web applications.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Divider variant=\"middle\" />\r\n                </List>\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.handleButton} onClick={(e)=>{ \r\n                    let score = 0;\r\n                    \r\n                    java ? score++:score\r\n                    jdk ? score++:score\r\n                    jre ? score++:score\r\n                    jar ? score++:score\r\n                    jvm ? score++:score\r\n\r\n                    handleSubmit(e,props,startTime,score) \r\n                    }}>\r\n                Next\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    TextField,\r\n    Button,\r\n    AppBar, \r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar,withStyles, Container } from '@material-ui/core'\r\n\r\n import LearningStyles from '../../../Data/learningStyles'   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    handleButton :{\r\n      margin: theme.spacing(4),\r\n      float:'right'\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n\r\n\r\n\r\nexport default function LS (props) {\r\n    const classes = useStyles()\r\n\r\n    let lsTypeParam = props.match.params.ls_type+''\r\n\r\n    lsTypeParam = lsTypeParam.substring(1, lsTypeParam.length)\r\n\r\n    const ls =  LearningStyles.find((ls) => lsTypeParam === ls.type)\r\n\r\n    return(\r\n        <div>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                      Learning Styles\r\n                  </Typography>\r\n                </Toolbar>\r\n            </AppBar>    \r\n            <Container maxWidth=\"md\">\r\n                <Card className={classes.card}>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body2\" color='secondary'>\r\n                                    Hello there, to improve your ease of study, we use FLSM mapping techiques to asses your learning style and will give study materials according to that.\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"h4\">\r\n                                    {ls.name}\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                    {\r\n                                        ls.type.charAt(0) === 'a' ? (\r\n                                                'You like activites rathar than boring theories'\r\n                                            ):(\r\n                                                'You learn from what you study'\r\n                                            )\r\n                                    }\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                    {\r\n                                        ls.type.charAt(1) === 's' ? (\r\n                                                'You think before approching a problem'\r\n                                            ):(\r\n                                                'You give preference to you intuitions'\r\n                                            )\r\n                                    }\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                    {\r\n                                        ls.type.charAt(2) === 'v' ? (\r\n                                                'You like graphical stuff and illustrations'\r\n                                            ):(\r\n                                                'You are good with reading ( verbal )'\r\n                                            )\r\n                                    }\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                    {\r\n                                        ls.type.charAt(0) === 's' ? (\r\n                                                'You study sequencially (step by step)'\r\n                                            ):(\r\n                                                'You prefer global view about the things'\r\n                                            )\r\n                                    }\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <Typography gutterBottom variant=\"body1\">\r\n                                   In the upcomming chapters you will get the learning materials that matches your interests. Happly Learning !\r\n                                </Typography>\r\n                            </ListItem>\r\n                        </List>\r\n                        <Button variant=\"outlined\" color=\"primary\" className={classes.handleButton} onClick={(e)=>{ \r\n                            e.preventDefault()\r\n                            props.history.push( '/ls/asvs') \r\n                            }}\r\n                        >\r\n                            Proceed  !     \r\n                        </Button>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    TextField,\r\n    Button,\r\n    AppBar, \r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    Box,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Divider,\r\n    Toolbar,withStyles, Container } from '@material-ui/core'\r\n\r\n import LearningStyles from '../../../Data/learningStyles'   \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    handleButton :{\r\n      margin: theme.spacing(4),\r\n      float:'right'\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n  const handleSubmit = (e,props,startTime,score) => {\r\n    e.preventDefault()\r\n    score*= 2\r\n    let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n    time = time >= 9 ? 9 : time\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n\r\n    props.history.push( '/ls/asvs')\r\n}\r\n\r\n\r\n\r\nexport default function Style (props) {\r\n    const classes = useStyles()\r\n\r\n    const ls =  LearningStyles.find((ls) => props.match.params.ls_type === ls.type)\r\n\r\n    return(\r\n        <div>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                      { ls.type.toUpperCase() }\r\n                  </Typography>\r\n                </Toolbar>\r\n            </AppBar>    \r\n            <Container maxWidth=\"md\">\r\n                <Box justifyContent=\"center\" alignItems=\"center\">\r\n                    <List >\r\n                        <ListItem>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    {ls.type.charAt(0)}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <Card>\r\n                                <CardContent>\r\n                                {ls.type.charAt(1)}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <Card>\r\n                                <CardContent>\r\n                                {ls.type.charAt(2)}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <Card>\r\n                                <CardContent>\r\n                                {ls.type.charAt(3)}\r\n                                </CardContent>\r\n                            </Card>\r\n                        </ListItem>\r\n                    </List>\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    Button,\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    Container} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    handleButton :{\r\n        margin: theme.spacing(4),\r\n        float:'right'\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n    Text : {\r\n        display : 'block'\r\n    }\r\n  }));\r\n\r\n\r\nconst handleSubmit = (e,props,startTime,score) => {\r\n    e.preventDefault()\r\n    score*= 2\r\n    let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n    time = time >= 9 ? 9 : time\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n\r\n    props.history.push( '/course/'+ props.match.params.course +'/definitons')\r\n}\r\n\r\nexport default function Overview (props) {\r\n    const classes = useStyles()\r\n\r\n\r\n    const startTime = Date.now()\r\n\r\n    const [intro,setIntro] = useState(false)\r\n\r\n    const handleIntro = () => {\r\n        setIntro(true)\r\n    }\r\n\r\n    const [basics,setBasics] = useState(false)\r\n\r\n    const handleBasics = () => {\r\n        setBasics(true)\r\n    }\r\n\r\n    const [inter,setInter] = useState(false)\r\n\r\n    const handleInter = () => {\r\n        setInter(true)\r\n    }\r\n\r\n    const [oops,setOops] = useState(false)\r\n\r\n    const handleOops = () => {\r\n        setOops(true)\r\n    }\r\n\r\n    const [adv,setAdv] = useState(false)\r\n\r\n    const handleAdv = () => {\r\n        setAdv(true)\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Container maxWidth='sm'>\r\n            <form  autoComplete=\"off\" noValidate>\r\n                <List >\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleIntro } >\r\n                            <Typography variant='h5' gutterBottom >\r\n                                Introduction\r\n                            </Typography>\r\n                        </ListItem> \r\n                        {  intro ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1' gutterBottom>\r\n                                        In this section we learn the basic & fundamental things about Java\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment>)\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleBasics }> \r\n                            <Typography variant='h5'>\r\n                                Basics\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { basics ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                       Basic programming concepts like contditional statements and loop statements and variables and thier syntax will be covered here.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleInter }>\r\n                            <Typography variant='h5'>\r\n                                Intermediatory \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { inter ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                       concepts like packages classes functions access modifiers will be covered here.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleOops }>\r\n                            <Typography variant='h5'>\r\n                                Object Oriented  Programming With Java \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { oops ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                       Object Oriented concepts like inheritence and abstracting will be covered here.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Java Interface concepts also will take importance phase in this chapter\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleAdv }>\r\n                            <Typography variant='h5'>\r\n                                Advanced Java\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { adv ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Advanced java concepts like threads and streams and lamda kinda things will take dominance here. \r\n                                    </Typography>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Networking in java also is an important concept to learn.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Divider variant=\"middle\" />\r\n                </List>\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.handleButton} onClick={(e)=>{ \r\n                    let score = 0;\r\n                    \r\n                    intro ? score++:score\r\n                    inter ? score++:score\r\n                    oops ? score++:score\r\n                    adv ? score++:score\r\n                    basics ? score++:score\r\n\r\n                    handleSubmit(e,props,startTime,score) \r\n                    }}>\r\n                Next\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Typography, \r\n    Paper, \r\n    makeStyles, \r\n    Button,\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    Container} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    handleButton :{\r\n        margin: theme.spacing(4),\r\n        float:'right'\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n    Text : {\r\n        display : 'block'\r\n    }\r\n  }));\r\n\r\n\r\nconst handleSubmit = (e,props,startTime,score) => {\r\n    e.preventDefault()\r\n    score*= 2\r\n    let time = Math.round(((Date.now() - startTime)/1000)/60)\r\n    time = time >= 9 ? 9 : time\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n\r\n    props.history.push( '/ls:asvs')\r\n}\r\n\r\nexport default function Summary (props) {\r\n    const classes = useStyles()\r\n\r\n\r\n    const startTime = Date.now()\r\n\r\n    const [java,setJava] = useState(false)\r\n\r\n    const handleJava = () => {\r\n        setJava(true)\r\n    }\r\n\r\n    const [basics,setBasics] = useState(false)\r\n\r\n    const handleBasics = () => {\r\n        setBasics(true)\r\n    }\r\n\r\n    const [inter,setInter] = useState(false)\r\n\r\n    const handleInter = () => {\r\n        setInter(true)\r\n    }\r\n\r\n    const [oops,setOops] = useState(false)\r\n\r\n    const handleOops = () => {\r\n        setOops(true)\r\n    }\r\n\r\n    const [adv,setAdv] = useState(false)\r\n\r\n    const handleAdv = () => {\r\n        setAdv(true)\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth='sm'>\r\n            <form  autoComplete=\"off\" noValidate>\r\n                <List >\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleJava } >\r\n                            <Typography variant='h5' gutterBottom >\r\n                                Java - Summary\r\n                            </Typography>\r\n                        </ListItem> \r\n                        {  java ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1' gutterBottom>\r\n                                      Java is a high-level programming language developed by Sun Microsystems.\r\n                                      It was originally designed for developing programs for set-top boxes and handheld devices,\r\n                                      but later became a popular choice for creating web applications.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment>)\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleBasics }> \r\n                            <Typography variant='h5'>\r\n                                Java Basics - Summary\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { basics ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                       So, the basic concepts of java are, just like any other programming languages, contional statements, loop statements, variables etc.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleInter }>\r\n                            <Typography variant='h5'>\r\n                                Concepts In Java - Summary\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { inter ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                      Popular concepts that are used in java are Classes, Interfaces, Packages thess will get u started in Java.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> ) : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleOops }>\r\n                            <Typography variant='h5'>\r\n                                Object Oriented  Programming With Java \r\n                            </Typography>\r\n                        </ListItem> \r\n                        { oops ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                       Object oriented concepts are mandatory things you should learn if you wanna use java. It will enable you to work with teams that means you will learn making loosely coupled applications using these concepts\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null }\r\n                    </Paper>\r\n                    <Paper className={classes.heroButtons}>\r\n                        <ListItem onClick = { handleAdv }>\r\n                            <Typography variant='h5'>\r\n                                Advanced Java - Summary\r\n                            </Typography>\r\n                        </ListItem> \r\n                        { adv ? (\r\n                            <React.Fragment>\r\n                                <ListItem>\r\n                                    <Typography variant='body1'>\r\n                                        Concepts like Threads and streams enables you to use Java effectively. With that you could build enterprice applications and applicatoons that runs in network. Also, Networking in java will help you build networking modules such as Gateways.\r\n                                    </Typography>\r\n                                </ListItem>\r\n                            </React.Fragment> )\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    <Divider variant=\"middle\" />\r\n                </List>\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.handleButton} onClick={(e)=>{ \r\n                    let score = 0;\r\n                    \r\n                    java ? score++:score\r\n                    inter ? score++:score\r\n                    oops ? score++:score\r\n                    adv ? score++:score\r\n                    basics ? score++:score\r\n\r\n                    handleSubmit(e,props,startTime,score) \r\n                    }}>\r\n                Next\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { Typography, \r\n    makeStyles, \r\n    Button,\r\n    CardContent, \r\n    CardMedia, \r\n    Card,\r\n    List,\r\n    ListItem,\r\n    CardActionArea,\r\n    CardActions,\r\n    Divider,\r\n   Container } from '@material-ui/core'\r\n   import CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link : {\r\n      textDecoration : 'none',\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    handleButton :{\r\n      margin: theme.spacing(4),\r\n      float:'right'\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n\r\nconst handleSubmit = (e,props,startTime,score) => {\r\n    e.preventDefault()\r\n    let time = ((Date.now() - startTime)/1000)/60\r\n\r\n    score*=2\r\n    score = score >= 9 ? 9 : score\r\n    time = time >= 9 ? 9 : time\r\n    time = Math.round(time)\r\n    console.log(\"score\"+score)\r\n    console.log(\"time\"+time)\r\n    props.history.push(  '/course/'+ props.match.params.course +'/summary')\r\n}\r\n\r\nexport default function Visual (props) {\r\n        const classes = useStyles()\r\n\r\n        const startTime = Date.now()\r\n\r\n        const [inheritance, setInheritance] = React.useState(true)\r\n        const [single, setSingle] = React.useState(true)\r\n        const [multi, setMulti] = React.useState(true)\r\n        const [hybrid, setHybrid] = React.useState(true)\r\n        const [hierarchical, setHierarchical] = React.useState(true)\r\n\r\n        const handleInheritance = () => {\r\n          setInheritance(false)\r\n        }\r\n\r\n        const handleSingle = () => {\r\n          setSingle(false)\r\n        }\r\n\r\n        const handleMulti = () => {\r\n          setMulti(false)\r\n        }\r\n\r\n        const handleHybrid = () => {\r\n          setHybrid(false)\r\n        }\r\n\r\n        const handleHierarchical = () => {\r\n          setHierarchical(false)\r\n        }\r\n\r\n        return(\r\n        <Container>\r\n        <form  autoComplete=\"off\" noValidate>\r\n            <List >\r\n                <ListItem>\r\n                    <Typography variant='h5'>\r\n                        Inheritance\r\n                    </Typography>\r\n                </ListItem> \r\n                <ListItem>\r\n                  <Card className={classes.root} raised={inheritance}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        // height=\"250\"\r\n                        image=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/04/Inheritance-types-java.png\"\r\n                        title=\"Inheritance\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          Inheritance\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          Inheritance is a widely used OOPs concept which is used to implemet abstraction and coupling in our application. Also, it will be used full if we work with a team or a group of people.\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions className={classes.handleButton} >\r\n                      <Button size=\"small\" color={inheritance ? 'secondary':'primary'} onClick={handleInheritance }>\r\n                        <CheckCircleSharpIcon/>\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </ListItem> \r\n                <ListItem>\r\n                  <ListItem>\r\n                    <Card className={classes.root} raised={single}>\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Contemplative Reptile\"\r\n                          height=\"500\"\r\n                          image=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/04/Single-Inheritance-144x180.png\"\r\n                          title=\"Single Inheritance\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Single Inheritance\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                          In single inheritance, one class inherits the properties of another. It enables a derived class to inherit the properties and behavior from a single parent class. This will in turn enable code reusability as well as add new features to the existing code.\r\n\r\n                          Here, Class A is your parent class and Class B is your child class which inherits the properties and behavior of the parent class.\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions className={classes.handleButton} >\r\n                      <Button size=\"small\" color={single ? 'secondary':'primary'} onClick={handleSingle }>\r\n                        <CheckCircleSharpIcon/>\r\n                      </Button>\r\n                    </CardActions>\r\n                    </Card>\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <Card className={classes.root} raised={multi}>\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Contemplative Reptile\"\r\n                          height=\"500\"\r\n                          image=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/04/Multilevel-Inheritance-204x300.png\"\r\n                          title=\" Multilevel Inheritance\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Multilevel Inheritance\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            When a class is derived from a class which is also derived from another class, i.e. a class having more than one parent class but at different levels, such type of inheritance is called Multilevel Inheritance.\r\n                            If we talk about the flowchart, class B inherits the properties and behavior of class A and class C inherits the properties of class B. Here A is the parent class for B and class B is the parent class for C. So in this case class C implicitly inherits the properties and methods of class A along with Class B. That’s what is multilevel inheritance.\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions className={classes.handleButton} >\r\n                      <Button size=\"small\" color={multi ? 'secondary':'primary'} onClick={handleMulti }>\r\n                        <CheckCircleSharpIcon/>\r\n                      </Button>\r\n                    </CardActions>\r\n                    </Card>\r\n                  </ListItem>\r\n                </ListItem>\r\n                <ListItem>\r\n                <ListItem>\r\n                    <Card className={classes.root} raised={hybrid}>\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Contemplative Reptile\"\r\n                          // height=\"500\"\r\n                          image=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/04/Hybrid-Inheritance-186x180.png\"\r\n                          title=\"Hybrid Inheritance\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Hybrid Inheritance\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            Hybrid inheritance is a combination of multiple inheritance and multilevel inheritance. Since multiple inheritance is not supported in Java as it leads to ambiguity, so this type of inheritance can only be achieved through the use of the interfaces. \r\n                            If we talk about the flowchart, class A is a parent class for class B and C, whereas Class B and C are the parent class of D which is the only child class\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions className={classes.handleButton} >\r\n                      <Button size=\"small\" color={hybrid ? 'secondary':'primary'} onClick={handleHybrid }>\r\n                        <CheckCircleSharpIcon/>\r\n                      </Button>\r\n                    </CardActions>\r\n                    </Card>\r\n                  </ListItem>\r\n                  <ListItem >\r\n                    <Card className={classes.root} raised={hierarchical}>\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Contemplative Reptile\"\r\n                          // height=\"500\"\r\n                          image=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/04/Hierarchical-Inheritance-300x178.png\"\r\n                          title=\"Hierarchical  Inheritance\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Hierarchical  Inheritance\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            When a class has more than one child classes (sub classes) o r in other words, more than one child classes have the same parent class, then such kind of inheritance is known as hierarchical.\r\n                            If we talk about the flowchart, Class B and C are the child classes which are inheriting from the parent class i.e Class A.\r\n                            Let’s see the syntax for hierarchical inheritance in Java:\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions className={classes.handleButton} >\r\n                      <Button size=\"small\" color={hierarchical ? 'secondary':'primary'} onClick={handleHierarchical }>\r\n                        <CheckCircleSharpIcon/>\r\n                      </Button>\r\n                    </CardActions>\r\n                    </Card>\r\n                  </ListItem>\r\n                </ListItem>\r\n                <Divider variant=\"middle\" />\r\n            </List>\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.handleButton}  onClick={(e)=>{ \r\n                let score = 0;\r\n\r\n                inheritance ? score : score++\r\n                single ? score : score++\r\n                multi ? score : score++\r\n                hybrid ? score : score++\r\n                hierarchical ? score : score++\r\n\r\n               \r\n                handleSubmit(e,props,startTime,score) \r\n                }} \r\n\r\n            >\r\n                Next\r\n            </Button>\r\n        </form>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link as Linkto } from 'react-router-dom'\r\nimport courses from '../Data/courses'\r\n\r\nfunction Copyright() {\r\n    const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        <Linkto to='/' className={classes.link}>\r\n            Chill Studies\r\n        </Linkto>\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  link : {\r\n    textDecoration : 'none',\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  handleButton :{\r\n    margin: theme.spacing(4),\r\n    float:'right'\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n        <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Welcome to your Dashboard !\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n            You can find your subscribed courses below.\r\n            Happy Learning !.\r\n            </Typography>\r\n        </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        {/* End hero unit */}\r\n        <Grid container spacing={4}>\r\n            {courses.map(course => (\r\n                <Grid item key={course} xs={12} sm={6} md={4}> \r\n                    <Linkto className={classes.link} to={`/course/${course.name}`}>\r\n                        <Card className={classes.card}>\r\n                        <CardMedia\r\n                            className={classes.cardMedia}\r\n                            image={course.image}\r\n                            title={course.name}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                              {course.desc}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </Card>\r\n                    </Linkto>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          {`“Study hard what interests you the most in the most undisciplined, irreverent and original manner possible.”`}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        Richard P. Feynman\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport {Link as Linkto} from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        <Linkto to='/' className={classes.link}>\r\n            Chill Studies\r\n        </Linkto>\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  link : {\r\n    textDecoration : 'none',\r\n    marginTop: '5px%',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://images.unsplash.com/photo-1503676260728-1c00da094a0b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nasync function handleClick (e,props) {\r\n  e.preventDefault();\r\n  const email = document.getElementById('email').value\r\n  const password = document.getElementById('password').value\r\n\r\n  try {\r\n    const res = await axios.post('http://127.0.0.1:8000/api/v1/student/login',\r\n    {\r\n      \"studentId\":email,\r\n      \"password\":password\r\n    })\r\n\r\n    if(res.data.status === 'Login success !!') {\r\n      props.history.push('/dashboard')\r\n    }\r\n    else {\r\n      alert(\"Pls Enter Valid Details\");\r\n    }\r\n  } catch(err ){\r\n    alert(err)\r\n  }\r\n}\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick = { (e) => { handleClick(e,props) } }\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Linkto className={classes.link} to=\"/signup\">\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Linkto>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport {Link as Linkto } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\">\r\n        <Linkto to='/' className={classes.link}>\r\n            Chill Studies\r\n        </Linkto>\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nasync function handleClick(e,props) {\r\n  e.preventDefault();\r\n\r\n  const name = document.getElementById('name').value,\r\n    email = document.getElementById('email').value,\r\n    password = document.getElementById('password').value,\r\n    confirmPassword = document.getElementById('confirmPassword').value\r\n\r\n  if(name === '' || email === '' || password === '' || confirmPassword === '' ) {\r\n    alert(\"Provide Valid Informations\");\r\n  } else {\r\n    const data = {\r\n      \"name\": name,\r\n      \"studentId\": email,\r\n      \"password\": password,\r\n      \"passwordConfrim\": confirmPassword\r\n    }\r\n    try{\r\n      const res = await axios.post('http://127.0.0.1:8000/api/v1/student/signup', data )\r\n      if(res.data.status === 'sign up success !!') {\r\n        alert('You Successfully Signed Up !!! \\n Now Sign In To Continue');\r\n        props.history.push('/')\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            autoFocus\r\n            required\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n           <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick = { (e) => handleClick(e,props)} \r\n            >\r\n              Sign Up\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n// Create a theme instance.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import Activity from '../Components/Course/Activity'\r\nimport Content from '../Components/Course/Content'\r\nimport Definitions from '../Components/Course/Definitions'\r\nimport Summary from '../Components/Course/Summary'\r\nimport Visual from '../Components/Course/Visual'\r\nimport Overview from '../Components/Course/Overview'\r\n\r\nconst categories = [\r\n    {\r\n      name: 'activity',\r\n      component : Activity\r\n    },\r\n    {\r\n        name: 'content',\r\n        component : Content\r\n    },\r\n    {\r\n        name: 'definitons',\r\n        component : Definitions\r\n    },\r\n    {\r\n        name: 'summary',\r\n        component : Summary\r\n    },\r\n    {\r\n        name: 'visual',\r\n        component : Visual\r\n    },\r\n    {\r\n        name: 'overview',\r\n        component : Overview\r\n    },\r\n    {\r\n        name: 'summary',\r\n        component : Summary\r\n    }\r\n]\r\n\r\nexport default categories","const courses = [\r\n    {\r\n      name: 'Java',\r\n      image: 'https://c4.wallpaperflare.com/wallpaper/510/989/208/web-development-development-java-wallpaper-preview.jpg',\r\n      desc : 'Java Beginner Pack'\r\n    },\r\n    {\r\n        name: 'JavaScript',\r\n        image: 'https://i1.wp.com/www.nishantvaity.com/wp-content/uploads/2019/05/javascript.jpg?fit=650%2C400&ssl=1',\r\n        desc : 'JavaScript Beginner Pack'\r\n    },\r\n    {\r\n        name: 'HTML',\r\n        image: 'https://dinesh-ghimire.com.np/wp-content/uploads/2019/02/html5.png',\r\n        desc : 'HTML Beginner Pack'\r\n    },\r\n    {\r\n        name: 'CSS',\r\n        image: 'https://colorlib.com/wp/wp-content/uploads/sites/2/creative-css3-tutorials.jpg',\r\n        desc : 'CSS Beginner Pack'\r\n    },\r\n    {\r\n        name: 'ReactJs',\r\n        image: 'https://embedwistia-a.akamaihd.net/deliveries/bdfbccc31132d5f0a48bbf0caacced1e.webp?image_crop_resized=1280x800',\r\n        desc : 'ReactJs Beginner Pack'\r\n    },\r\n    {\r\n        name: 'NodeJs',\r\n        image: 'https://cdnblog.natrocdn.com/wp-content/uploads/2019/10/node-js-nedir-768x427.jpg',\r\n        desc : 'NodeJs Beginner Pack'\r\n    },\r\n\r\n]\r\n\r\nexport default courses","export default [ \r\n    {\r\n        type : 'rirs',\r\n        name : 'Reflective Intuitive Reading Sequential'\r\n    },\r\n    {\r\n        type : 'rsrs',\r\n        name : 'Reflective Sensing Reading Sequential'\r\n    },\r\n    {\r\n        type : 'rivs',\r\n        name : 'Reflective Intuitive Visual Sequential'\r\n    },\r\n    {\r\n        type : 'rirg',\r\n        name : 'Reflective Intuitive Reading Global'\r\n    },\r\n    {\r\n        type : 'rsrg',\r\n        name : 'Reflective Sensing Reading Global'\r\n    },\r\n    {\r\n        type : 'asrs',\r\n        name : 'Active Sensing Reading Sequential'\r\n    },\r\n    {\r\n        type : 'rivg',\r\n        name : 'Reflective  Intuitive  Visual Global'\r\n    },\r\n    {\r\n        type : 'airg',\r\n        name : 'Active Intuitive Reading Global'\r\n    },\r\n    {\r\n        type : 'airs',\r\n        name : 'Active Intuitive Reading Sequential'\r\n    },\r\n    {\r\n        type : 'asrg',\r\n        name : 'Active Sensing Reading Global'\r\n    },\r\n    {\r\n        type : 'rsvs',\r\n        name : 'Reflective Sensing Visual Sequential'\r\n    },\r\n    {\r\n        type : 'aivg',\r\n        name : 'Active Intuitive Visual Global'\r\n    },\r\n    {\r\n        type : 'aivs',\r\n        name : 'Active Intuitive Visual Sequential'\r\n    },\r\n    {\r\n        type : 'rsvg',\r\n        name : 'Reflective Sensing Visual Global'\r\n    },\r\n    {\r\n        type : 'asvg',\r\n        name : 'Active Sensing Visual Global'\r\n    },\r\n    {\r\n        type : 'asvs',\r\n        name : 'Active Sensing Visual Sequential'\r\n    }\r\n]","import Login from '../Components/Login'\r\nimport Signup from '../Components/Signup'\r\nimport Dashboard from '../Components/Dashboard'\r\nimport CourseHome from '../Components/Course/CourseHome'\r\nimport Category from '../Components/Course/Category'\r\nimport LS from '../Components/Course/LS/LS'\r\nimport LearningStyle from '../Components/Course/LS/LearningStyle'\r\n\r\n\r\nconst routes = [\r\n    {\r\n      path: \"/\",\r\n      component: Login,\r\n      exact : true\r\n    },\r\n    {\r\n        path: \"/signup\",\r\n        component: Signup,\r\n        exact : true\r\n    },\r\n    {\r\n        path: \"/dashboard\",\r\n        component: Dashboard,\r\n        exact : true\r\n    },\r\n    {\r\n        path: \"/ls:ls_type\",\r\n        component : LS,\r\n        exact : true\r\n    },\r\n    {\r\n        path: \"/ls/:ls_type\",\r\n        component : LearningStyle,\r\n        exact : true\r\n    },\r\n    {\r\n        path: \"/course/:course\",\r\n        component: CourseHome,\r\n        exact : true\r\n    },\r\n    {\r\n        path: \"/course/:course/:category\",\r\n        component: Category,\r\n        exact : true\r\n    },\r\n  \r\n]\r\n\r\nexport default routes","import express from 'express'\r\nconst cors = require(\"cors\");\r\nconst morgan = require(\"morgan\");\r\nconst globalErrorHandler = require('./APIs/Controllers/ErrorController');\r\nconst AppErr = require('./APIs/utils/appError');\r\nconst studentRouter = require('./APIs/Routers/studentRouter');\r\nconst  mlRouter = require('./APIs/Routers/mlRouters')\r\n\r\nimport Router from './React/Server/index'\r\n\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(morgan(\"dev\"));\r\napp.use(cors());\r\n\r\n\r\n//===============Routers=====================\r\napp.use(\"/api/v1/student\", studentRouter);\r\napp.use(\"/api/v1/ml\", mlRouter);\r\n\r\napp.use(\"/\",Router)\r\n\r\napp.all(\"*\", (req, res, next) => {\r\n  next(new AppErr(\"Can't find a route - BAD URL\", 404));\r\n});\r\n\r\napp.use(globalErrorHandler);\r\n\r\nexport default app\r\n","import app from './app'\nconst dotenv = require(\"dotenv\");\nconst mongoose = require(\"mongoose\");\ndotenv.config({ path: \"./config.env\" });\n\nconst DB = process.env.DB_CON.replace(\"<password>\", process.env.DB_PASS);\n\nconsole.log(DB);\n\nmongoose\n  .connect(DB, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true\n  })\n  .then(() => {\n    console.log(\"Database connection Done !\");\n  })\n  .catch(err => {\n    console.log(err);\n  });\n\nconst port = process.env.CON_PORT;\n\napp.listen(port, () => {\n  console.log(`Server Started at http://localhost:8000`);\n});\n","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/core/Box\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/CardMedia\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/Container\");","module.exports = require(\"@material-ui/core/CssBaseline\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/Link\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Apps\");","module.exports = require(\"@material-ui/icons/ArrowForwardIosRounded\");","module.exports = require(\"@material-ui/icons/CheckCircleSharp\");","module.exports = require(\"@material-ui/icons/LockOutlined\");","module.exports = require(\"axios\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cors\");","module.exports = require(\"crypto\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"nodemailer\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"serialize-javascript\");","module.exports = require(\"util\");","module.exports = require(\"validator\");"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;ACRA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AALA;AAQA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAiBA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;AAAA;AAAA;AAqCA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAvCA;AAAA;AAAA;AAAA;AAwCA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AA8BA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACzKA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAXA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AARA;AAAA;AAAA;AAAA;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAnDA;AA0DA;AAEA;;;;;;;;;;;;;;;AC9DA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AApCA;AA2CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACzFA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;ACPA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;;;;;;;;ACdA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAVA;AACA;AAWA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAJA;AACA;AAUA;AACA;AACA;AACA;AACA;AAJA;AACA;AAQA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AACA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAQA;AAEA;AAAA;AAAA;AACA;AAgBA;AAEA;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAIA;AACA;AAVA;AACA;AAWA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAjCA;AACA;AAuCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AAC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AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAjCA;AACA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAmCA;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArCA;AACA;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAKA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAKA;AAAA;AAQA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAVA;AAgBA;;;;;;;;;;;;ACxNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AArgBA;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAjCA;AACA;AAuCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAGA;AACA;AAFA;AAIA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAGA;AACA;AAFA;AAIA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AACA;AAFA;AAIA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAXA;AAmBA;;;;;;;;;;;;AC/QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAjCA;AAuCA;AACA;AAEA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AA9BA;AACA;AAmCA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAFA;AAIA;AACA;AADA;AAfA;AACA;AAmBA;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAKA;;;;;;;;;;;;AC5KA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAVA;AADA;AAiBA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;;;;;;;;;;;;ACtCA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAQA;;;;;;;;;;;;AClCA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAQA;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}